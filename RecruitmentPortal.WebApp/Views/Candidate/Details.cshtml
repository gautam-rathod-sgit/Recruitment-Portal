@model RecruitmentPortal.WebApp.ViewModels.CandidateViewModel
@using RecruitmentPortal.WebApp.Helpers
@using RecruitmentPortal.Infrastructure.Data.Enum
@using RecruitmentPortal.WebApp.Resources

<style>
</style>

<!-- Modal for Accepting Application -->
<div class="modal fade bg-gradient-orange center" id="acceptmodel" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Fill Details:</h4>
            </div>
            <div class="modal-body" id="_AcceptApplicationView">

            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- Modal end -->
<!-- Modal for Adding Rejection Reason -->
<div class="modal fade bg-gradient-orange center" id="rejectmodel" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Reject Reason:</h4>
            </div>
            <div class="modal-body" id="_RejectionReasonView">

            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- Modal end -->

<section class="content">
    <div class="row">
        <div class="col-sm-12">
            <!-- /.box -->
            <div class="box box-default boxPad">
                <div class="box-header">

                    <h3 class="box-title">
                        <i class="fa fa-info-circle"></i>
                        Candidate Details :
                    </h3>

                    <div class="box-tools pull-right">

                        @if (User.IsInRole("Admin"))
                        {
                            <a href='@Url.Action("AddNewJobApplications", "JobApplication",new { id = Model.EncryptedId })' class="btn btn-primary btn-sm">
                                Proceed
                            </a>
                        }
                        @if (Model.ID > 0)
                        {
                            <a href='@Url.Action("Download", "Candidate", new { filename = @Model.resume })' class="btn btn-primary  btn-sm">
                                Download Resume
                            </a>
                        }

                        <a class="btn btn-primary btn-sm" data-toggle="#acceptmodel" data-target="#acceptmodel" onclick="loadAcceptPartialView('@RSACSPSample.EncodeServerName(Model.JobAppId.ToString())')">
                            Accept
                        </a>
                        
                        <a class="btn btn-primary btn-sm" data-toggle="#rejectmodel" data-target="#rejectmodel" onclick="loadPartialView('@RSACSPSample.EncodeServerName(Model.ID.ToString())')">
                            Reject
                        </a>

                        <a href='@Url.Action("AllApplications","Candidate")' class="btn btn-primary btn-sm">
                            Cancel
                        </a>
                    </div>
                </div>
            </div>s

            <!-- /.box-header -->

            <form>
                <div class="box box-default container p-2">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.name)
                                    @Html.TextBoxFor(m => m.name, new { @placeholder = "Candidate name", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.name)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.email)
                                    @Html.TextBoxFor(m => m.email, new { @placeholder = "Email", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.email)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.phone)
                                    @Html.TextBoxFor(m => m.phone, new { @placeholder = "Phone", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.phone)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.dob)
                                    @Html.TextBoxFor(m => m.dob, new { @placeholder = "Date of Birth", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.dob)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.Gender)
                                    @Html.TextBoxFor(m => m.Gender, new { @placeholder = "Gender", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Gender)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.ssc_perc)
                                    @Html.TextBoxFor(m => m.ssc_perc, new { @placeholder = "SSC percentage", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ssc_perc)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.hsc_perc)
                                    @Html.TextBoxFor(m => m.hsc_perc, new { @placeholder = "HSC percentage", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.hsc_perc)
                                </div>

                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.degree)
                                    @Html.TextBoxFor(m => m.degree, new { @placeholder = "Degree", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.degree)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group">
                                    @Html.LabelFor(m => m.applying_through)
                                    @Html.TextBoxFor(m => m.applying_through, new { @placeholder = "Applying Through", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.applying_through)
                                </div>
                                <!-- /.form-group -->
                            </div>
                            <!-- /.col -->


                            <div class="col-md-6">
                                @if (Model.experience == "Fresher")
                                {
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.experience)
                                        @Html.TextBoxFor(m => m.experience, new { @placeholder = "Experience", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.experience)
                                    </div>
                                    <!-- /.form-group -->
                                }
                                else
                                {
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.experience)
                                        @Html.TextBoxFor(m => m.experience, new { @placeholder = "Experience", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.total_experience)
                                        @Html.TextBoxFor(m => m.total_experience, new { @placeholder = "Total Experience", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.total_experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.relevent_experience)
                                        @Html.TextBoxFor(m => m.relevent_experience, new { @placeholder = "Relevent Experience", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.relevent_experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.current_ctc)
                                        @Html.TextBoxFor(m => m.current_ctc, new { @placeholder = "Current CTC", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.current_ctc)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.expected_ctc)
                                        @Html.TextBoxFor(m => m.expected_ctc, new { @placeholder = "Expected CTC", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.expected_ctc)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.notice_period)
                                        @Html.TextBoxFor(m => m.notice_period, new { @placeholder = "Notice Period", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.notice_period)
                                    </div>
                                    <!-- /.form-group -->
                                }
                            </div>
                            <!-- /.col -->
                        </div>
                        <!--/.row-->
                    </div>
                </div>
                <!-- /.box-body -->
            </form>
        </div>
    </div>
    <!-- /.box-body -->
</section>

<script>

    $(document).ready(function () {
        //for reset validation of form
        $('#rejectmodel').on('hidden.bs.modal', function () {
            $('.field-validation-error').html("");
        });
    });

    function Details(id) {
        window.location.href = '@Url.Action("Details", "Candidate")?id=' + id;
    }


    $(function () {
        $('button[data-toggle="ajax-modal"]').click(function (event) {
            var url = $(this).data('url');
            $.get(url).done(function (data) {
                $('#modal-placeholder').html(data);
                $('#modal-placeholder > .modal').modal('show');
            });
        });
    });

    ////Function for setting Flag_Accepted value as true
    //function openPopupAccept() {
    //    $("#Flag_Accepted").val(true);
    //    $('#acceptmodel').modal('show');
    //}
   // Function for setting Flag_Reject value as true
    function openPopup() {
        $("#Flag_Rejected").val(true);
        $('#rejectmodel').modal('show');
    }

    function loadPartialView(id) {
        var url = '@Url.Action("RenderRejectionView", "Candidate" )?id=' + id;
        $('#_RejectionReasonView').load(url, function () {
            $('#rejectmodel').modal({ show: true });
        });
    }
    
    function loadAcceptPartialView(id) {
        var url = '@Url.Action("RenderAcceptView", "Candidate")?id=' + id;
        $('#_AcceptApplicationView').load(url, function () {
            $('#acceptmodel').modal({ show: true });
        });
    }
</script>