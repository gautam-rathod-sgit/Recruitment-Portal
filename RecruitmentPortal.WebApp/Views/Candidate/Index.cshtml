@using RecruitmentPortal.Infrastructure.Data.Enum
@model RecruitmentPortal.WebApp.ViewModels.CandidateViewModel

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var resumeok = false;
        //for setting degree dropdown to starting index
        $("select#selectedDegree")[0].selectedIndex = 0;

        //for getting departments and dependent departments
        $('#selectedDegree').change(function () {

            debugger;
                
                var url = '@Url.Content("~/")' + "Candidate/GetDept";
            var ddlsource = "#selectedDegree";
                $.getJSON(url, { Id: $(ddlsource).val() }, function (data) {                    
                    debugger;
                    if (data.length > 1) {
                        //$('#DegreeID').after(dept_area);
                        var dept_drop = '';
                        $('#SelectDept').remove(); //for removing if already existing dropdown exist of previous record
                        dept_drop += '<select id="SelectDept" name="SelectDept" style="width:200px" required>';

                        
                        var options = '';
                        for (var i = 0; i < data.length; i++) {
                            dept_drop += '<option value="' + data[i].value + '">' + data[i].text + '</option>';
                        }
                        debugger;
                        dept_drop += '</select>';
                        $('.degree_dept').append(dept_drop);
                        debugger;
                        //$("DegreeID").after(dept_drop);
                       /* isData = true; debugger*/;

                        //$("#DeptID").removeAttr('hidden').empty();
                        //$.each(data, function (i, dept) {
                        //    items += "<option value='" + dept.value + "'>" + dept.text + "</option>";
                        //});
                        //$('#DeptID').html(items);
                        //isData = true; debugger;
                    }
                    else {
                        debugger;                 
                            $("#DeptID").val(0);
                            //$('.dept').nextAll('#SelectDept').remove();
                            $('#SelectDept').remove();
                    }
                });
           
            

        });
        //for removing 0 on fields
        $(".form-control").val($(this).val() == 0 ? '' : $(this).val());

        //for only pdf and docx
        $('#resume').on('change', function (e) {
            myfile = $(this).val();
            var ext = myfile.split('.').pop();
            if (ext == "pdf" || ext == "PDF" || ext == "docx" || ext == "DOCX" || ext == "doc" || ext == "DOC"
                || ext == "jpeg" || ext == "JPEG" || ext == "jpg" || ext == "JPG" || ext == "png" || ext == "PNG" || ext == "Jpg" || ext == "Png") {
                var resumeok = true;
            } else {
                $('#resume').after('<p style="color:red">File needs to be PDF or DOCX.</p>');
                alert("File must be pdf or docx or png or jpg or jpeg !!");
                $("#resume").val('');
            }
        });


        //for experienced stuff
        var alreadyBound = false;
        $("#experienced").click(function () {
            if (!alreadyBound) {


                //total_experience Old Pattern = "^[-a-zA-Z0-9-()+]+(\s+[-a-zA-Z0-9-()]+)+*$"
                                 //New Pattern1= "^[-a-zA-Z0-9-()+]+(\s+[-a-zA-Z0-9-()]+)*$"
                                 //New Pattern1= "^([0-9a-zA-Z]+)|([0-9a-zA-Z][0-9a-zA-Z\\s]+[0-9a-zA-Z]+)$"

                //total_experience
                var total_experience = '';
                total_experience += '<div class="form-group mt-2">';
                total_experience += '<label class= "control-label required" > Total Experience:</label ><br>';
                var input = '<input type="text" data-val="true" required pattern="^([0-9a-zA-Z]+)|([0-9a-zA-Z][0-9a-zA-Z\\s]+[0-9a-zA-Z]+)$" data-val-total_experience="The Total Experience field is not a valid." data-val-required="The Total Experience field field is required." id="total_experience" name="total_experience" value="" style="width : 100%;height:40px;border-radius : 4px;border:0.5px solid #C7C6C5"/>';
                total_experience += input;
                total_experience += '</div >';
                $("#afterEXP").after(total_experience);


                //relevent_experience old Pattern = "^[-a-zA-Z0-9-()+]+(\s+[-a-zA-Z0-9-()]+)+*$"
                                   // New Pattern = "^[-a-zA-Z0-9-()+]+(\s+[-a-zA-Z0-9-()]+)*$"

                //relevent_experience
                var relevent_experience = '';
                relevent_experience += '<div class="form-group mt-2">';
                relevent_experience += '<label class= "control-label required" > Relevent Experience:</label ><br>';
                var input = '<input type="text" data-val="true" required pattern="^([0-9a-zA-Z]+)|([0-9a-zA-Z][0-9a-zA-Z\\s]+[0-9a-zA-Z]+)$" data-val-relevent_experience="The Relevent Experience field is not a valid." data-val-required="The Relevent Experience field is required." id="relevent_experience" name="relevent_experience" value="" style="width : 100%;height:40px;border-radius : 4px;border:0.5px solid #C7C6C5"/>';
                relevent_experience += input;                                     
                relevent_experience += '</div >';
                $("#total_experience").after(relevent_experience);


                //current_ctc
                var cur_ctc = '';
                cur_ctc += '<div class="form-group mt-2">';
                cur_ctc += '<label class= "control-label required" > Current CTC:</label ><br>';
                var input = '<input data-val="true" type="number" step=".01" required min="0" required data-val-current_ctc="The location field is not a valid." data-val-required="The Current CTC field is required." id="current_ctc" name="current_ctc" value="" style="width : 100%;height:40px;border-radius : 4px;border:0.5px solid #C7C6C5"/>';
                cur_ctc += input;
                cur_ctc += '</div >';
                $("#relevent_experience").after(cur_ctc);

                //expected_ctc
                var exp_ctc = '';
                exp_ctc += '<div class="form-group mt-2">';
                exp_ctc += '<label class= "control-label required" > Expected CTC:</label ><br>';
                var input = '<input data-val="true" type="number" step=".01" required min="0" required data-val-expected_ctc="The location field is not a valid." data-val-required="The Expected CTC field is required." id="expected_ctc" name="expected_ctc" value="" style="width : 100%;height:40px;border-radius : 4px;border:0.5px solid #C7C6C5"/>';
                exp_ctc += input;
                exp_ctc += '</div >';
                $("#current_ctc").after(exp_ctc);

                //notice period
                var notice_period = '';
                notice_period += '<label class= "control-label required mt-2" >Notice Period:</label >';
                notice_period += '<select id="notice_period" name="notice_period" style="width:200px">';
                notice_period += '<option>Select Option</option>';


                //calling get method for getting all values from controller of notice periods
                $.getJSON('@Url.Content("~/")' + "Candidate/noticePeriodList", function (data) {
                    debugger;
                    console.log(data);
                    debugger;

                    if (data.length > 0) {
                        $('#notice_period').html('');
                        var options = '';
                        //options += '<option value="Select">Select</option>';
                        for (var i = 0; i < data.length; i++) {
                            options += '<option value="' + data[i] + '">' + data[i] + '</option>';
                        }
                        debugger;
                        $('#notice_period').append(options);
                    }
                })


                notice_period += '</select>';
                $("#expected_ctc").after(notice_period);
            }
            alreadyBound = true;
        });

        $("#fresher").click(function () {
            $("#afterEXP").next().remove("div");
            alreadyBound = false;
        });

        //Display Only Date till today //
        var dtToday = new Date();
        var month = dtToday.getMonth() + 1;     // getMonth() is zero-based
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();
        if (month < 10)
            month = '0' + month.toString();
        if (day < 10)
            day = '0' + day.toString();

        var maxDate = year + '-' + month + '-' + day;
        $('#demo').attr('max', maxDate);

        ////validating email
        //function isValidEmailAddress() {
        //    debugger;
        //    var pattern = new RegExp('^[a-z0-9_\\+-]+(\\.[a-z0-9_\\+-]+)*@@[a-z0-9-]+(\\.[a-z0-9]+)*\\.([a-z]{2,4})$');
        //    return pattern.test($('#email').val());
        //}
      
         //$("#dob").datepicker({
        //    dateFormat: "dd-MM-yyyy",
        //    minDate: -0,
        //    maxDate: "+0M +0D"

        //});

        //$('#dob').datetimepicker({
        //    startDate: new Date()
        //});

        ////dob validation
        //var todaysDate = new Date(); // Gets today's date
        //// Max date attribute is in "YYYY-MM-DD".  Need to format today's date accordingly
        //var year = todaysDate.getFullYear();                        // YYYY
        //var month = ("0" + (todaysDate.getMonth() + 1)).slice(-2);  // MM
        //var day = ("0" + todaysDate.getDate()).slice(-2);           // DD
        //var maxDate = (day + "-" + month + "-" + year); // Results in "DD-mm-yyyy" for today's date
        //// Now to set the max date value for the calendar to be today's date
        //debugger;
        //$("#dob").attr('max', maxDate);

        //function checkdate() {
        //    debugger;
        //    //dob validation
        //    var todaysDate = new Date(); // Gets today's date
        //    // Max date attribute is in "YYYY-MM-DD".  Need to format today's date accordingly
        //    var year = todaysDate.getFullYear();                        // YYYY
        //    var month = ("0" + (todaysDate.getMonth() + 1)).slice(-2);  // MM
        //    var day = ("0" + todaysDate.getDate()).slice(-2);           // DD
        //    var maxDate = (day + month + year); // Results in "DD-mm-yyyy" for today's date
        //    //// Now to set the max date value for the calendar to be today's date
        //    //debugger;
        //    //if ($("#dob").val() > maxDate) {
        //    //    alert("date exceeded");
        //    //}
        //    ////$("#dob").attr('max', maxDate);

        //    var date = $('#dob').val().split("-");
        //    console.log(date, $('#dob').val())
        //    var day1 = date[2];
        //    var month1 = date[1];
        //    var year1 = date[0];
        //    var selected_date = (day1 + month1 + year1);

        //    if (selected_date > maxDate) {
        //        alert("greater");
        //    } else {
        //        alert("not greater");
        //    }
    });

</script>
<script>
    function ValidateEmail() {
        debugger;
        var email = document.getElementById("email").value;

        //email validation new 1 = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/
       // email validation new 2 = /\w+([-+.']\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*/
          //email validation old = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/


        var expr = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
        if (!expr.test(email)) {
            return false;
        }
    }
</script>

<style type="text/css">
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="row bg-gradient-gray-dark text-white">
    <div class="col-md-5">
        <h2 class="pl-2">Apply here :</h2>
    </div>
</div>


<hr />
<div class="container-fluid">
    <div class="row w-100">
        <div class="col-md-6">
            <form asp-action="IndexPost" enctype="multipart/form-data" style="width : auto">


                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" value="@Model.jobpostID" id="jobpostID" name="jobpostID" />
                <input type="hidden" value="@Model.ID" id="ID" name="ID" />

                

                <div class="form-group">
                    <label asp-for="name" class="control-label required">Name: </label>
                    <input asp-for="name" class="form-control" type="text" pattern="[a-zA-Z][a-zA-Z ]{2,}" required />
                    <span asp-validation-for="name" class="text-danger"></span>


                    @*@Html.LabelFor(m => m.name, new HtmlHelper { @class = "control-label" })
                    @Html.TextBoxFor(m => m.name)
                    @Html.ValidationMessageFor(m => m.name)*@

                </div>
                <div class="form-group">
                    <label asp-for="email" class="control-label required">Email:</label>
                    <input asp-for="email" class="form-control" type="email"
                           placeholder="sophie@example.com" required />
                    <span asp-validation-for="email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="phone" class="control-label required">Mobile No:</label>
                    <input asp-for="phone" class="form-control" type="tel" pattern="[0-9]{3}[0-9]{3}[0-9]{4}" placeholder="1232344567" required />
                    <span asp-validation-for="phone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="dob" class="control-label required">Date of Birth:</label>
                    <input asp-for="dob" class="form-control" type="date" id = "demo" placeholder="dd-mm-yyyy" required />
                    <span asp-validation-for="dob" class="text-danger"></span>
                </div>
              
                <div class="form-group">
                    <label asp-for="Gender" class="control-label required">Gender: </label>
                    <input type="radio" id="Gender" name="Gender" value="Male" required> Male &nbsp;
                    <input type="radio" id="Gender" name="Gender" value="Female"> Female &nbsp;
                    <input type="radio" id="Gender" name="Gender" value="Other"> Other
                    @*@Html.RadioButtonFor(m => m.Gender, "Male", new { @class = "ml-2" }) Male
                    @Html.RadioButtonFor(m => m.Gender, "Female", new { @class = "ml-2" }) Female
                    @Html.RadioButtonFor(m => m.Gender, "Other", new { @class = "ml-2" }) Other*@
                </div>
                <div class="form-group">
                    <label asp-for="ssc_perc" class="control-label required">SSC(%):</label>
                    <input asp-for="ssc_perc" class="form-control" type="number" step=".01" required min="0" max="100" />
                    <span asp-validation-for="ssc_perc" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="hsc_perc" class="control-label required">HSC or Equivalent(%):</label>
                    <input asp-for="hsc_perc" class="form-control" type="number" step=".01" required min="0" max="100" />
                    <span asp-validation-for="hsc_perc" class="text-danger"></span>
                </div>
                <div class="form-group degree_dept">
                    <label class="control-label required">Highest Education:</label>
                    <select asp-for="selectedDegree"
                            class="" required
                            asp-items="@(new SelectList(ViewBag.ListOfDegree,"ID", "degree_name"))">
                    </select>
                    @*<div class="dept"></div>*@
                    @*<select asp-for="ID" id="DeptID" name="selectDept"
                    hidden required
                    asp-items="@(new SelectList(string.Empty,"ID", "dept_name"))">
                     </select>*@
                </div>

                <div class="form-group">
                    <label asp-for="applying_through" class="control-label required">How did you hear about us? </label>
                    <select asp-for="applying_through"
                            class="" required
                            asp-items="@(new SelectList(ViewBag.ReferenceSelect,"Value", "Text"))">
                    </select>
                </div>

                @*<div class="form-group">
                    <label asp-for="experience" class="control-label required">Experience:</label>
                    <input asp-for="experience" class="form-control" pattern="^[-a-zA-Z0-9-()+]+(\s+[-a-zA-Z0-9-()]+)*$" required />
                    <span asp-validation-for="experience" class="text-danger"></span>
                </div>*@
                <div class="form-group">
                    <label asp-for="experience" class="control-label required">Experience:</label>
                    <input type="radio" name="experience" value="Fresher" id="fresher" class="ml-2" required /><span> Fresher</span>
                    <input type="radio" name="experience" value="Experienced" id="experienced" class="ml-2" /><span id="afterEXP"> Experienced</span>
                    @*@Html.RadioButtonFor(m => m.mode_of_interview, "Telephonic", new { @class = "ml-2" })Telephonic
                 @Html.RadioButtonFor(m => m.mode_of_interview, "Face to Face", new { @class = "ml-2" })Face to Face*@
                </div>

                <div class="form-group">
                    <label asp-for="File" class="control-label required">Upload Resume:</label><br />
                    <input asp-for="File" id="resume" type="file" required />
                    <span asp-validation-for="File" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Apply" class="btn btn-primary" />&nbsp;
                    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Back to List</a>
                </div>

            </form>
        </div>
    </div>

</div>
