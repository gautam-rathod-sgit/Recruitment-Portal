@model RecruitmentPortal.WebApp.ViewModels.SchedulesViewModel
@using RecruitmentPortal.WebApp.Helpers
@using RecruitmentPortal.Infrastructure.Data.Enum
@using RecruitmentPortal.WebApp.Resources

<style>
</style>
<!-- Modal for Adding Reviews -->
<div class="modal fade bg-gradient-orange center" id="reviewmodel" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Add Reviews:</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Update_Schedule_POST", "Interviewer", FormMethod.Post, new { id = "reviewform" }))
                {
                    @Html.HiddenFor(m => m.candidate_name)
                    @Html.HiddenFor(m => m.position)
                    @Html.HiddenFor(m => m.datetime)
                    @Html.HiddenFor(m => m.round)
                    @Html.HiddenFor(m => m.mode_of_interview)
                    @Html.HiddenFor(m => m.location)
                    @Html.HiddenFor(m => m.candidateId)
                    @Html.HiddenFor(m => m.ID)
                    <div class="form-group">
                        @Html.LabelFor(m => m.rating, new { @class = "asterisk" })
                        @Html.TextBoxFor(m => m.rating, "{0:#.#}", new { @placeholder = "Ratings", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.rating, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group has-feedback has-feedback-left">
                        @Html.LabelFor(m => m.remark, new { @class = "asterisk" })
                        @Html.TextBoxFor(m => m.remark, new { @placeholder = "Remarks", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.remark, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group has-feedback has-feedback-left">
                        @Html.LabelFor(m => m.statusvalue, new { @class = "asterisk" })
                        @Html.DropDownList("statusvalue", Html.GetEnumSelectList(typeof(StatusType)), Messages.PleaseSelect, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.statusvalue, "", new { @class = "text-danger" })
                    </div>

                    <div class="modal-footer modal-footer2">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- Modal end -->
<section class="content">
    <div class="row">
        <div class="col-sm-12">
            <!-- /.box -->
            <div class="box box-default boxPad">
                <div class="box-header">

                    <h3 class="box-title">
                        <i class="fa fa-info-circle"></i>
                        Schedule Details :
                    </h3>

                    <div class="box-tools pull-right">

                        @if (User.IsInRole("Admin"))
                        {
                            <a href='@Url.Action("UpdateScheduleOfJobApplication", "JobApplication",
                                    new
                                    {
                                        id = @RSACSPSample.EncodeServerName((Model.jobAppId).ToString())
                                    ,
                                        scheduleId = @RSACSPSample.EncodeServerName((Model.ID).ToString())
                                    ,
                                        to_schedule = "true"
                                    }
                                    )' class="btn btn-primary btn-sm">
                                Re-Schedule
                            </a>
                        }
                        <a href='@Url.Action("Download","Candidate",
                                        new {filename = @Model.candidate.resume}
                                        )' class="btn btn-primary  btn-sm">
                            Download Resume
                        </a>
                        @if (ViewBag.isPending == true)
                        {
                            <a class="btn btn-primary btn-sm" data-toggle="#reviewmodel" data-target="#reviewmodel" onclick="openPopup()">
                                Add Reviews
                            </a>
                        }

                            @*back button*@
                            @if (User.IsInRole("Admin"))
                            {
                                if (ViewBag.toAdminIndex != null || ViewBag.toAdminIndex == true)
                                {

                                    <a href='@Url.Action("AdminIndex","Account")' class="btn btn-primary btn-sm">
                                        Cancel
                                    </a>
                                }
                                else
                                {
                                    <a href='@Url.Action("Index","Interviewer")' class="btn btn-primary btn-sm">
                                        Cancel
                                    </a>
                                }

                            }
                            else
                            {
                                <a href='@Url.Action("InterviewerIndex","Account")' class="btn btn-primary btn-sm">
                                    Cancel
                                </a>
                            }

                        </div>
                </div>
            </div>

            <!-- /.box-header -->

            <form>
                <div class="box box-default container p-2">
                    <div class="box-body">


                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate_name)
                                    @Html.TextBoxFor(m => m.candidate_name, new { @placeholder = "Candidate name", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate_name)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.position)
                                    @Html.TextBoxFor(m => m.position, new { @placeholder = "Job Title", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.position)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.jobRole)
                                    @Html.TextBoxFor(m => m.candidate.jobRole, new { @placeholder = "Job Role", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.jobRole)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.ssc_perc)
                                    @Html.TextBoxFor(m => m.candidate.ssc_perc, new { @placeholder = "SSC percentage", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.ssc_perc)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.hsc_perc)
                                    @Html.TextBoxFor(m => m.candidate.hsc_perc, new { @placeholder = "HSC percentage", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.hsc_perc)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.degree)
                                    @Html.TextBoxFor(m => m.candidate.degree, new { @placeholder = "Degree", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.degree)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group">
                                    @Html.LabelFor(m => m.candidate.applying_through)
                                    @Html.TextBoxFor(m => m.candidate.applying_through, new { @placeholder = "Applying Through", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.applying_through)
                                </div>
                                <!-- /.form-group -->
                            </div>
                            <!-- /.col -->


                            <div class="col-md-6">
                                @if (Model.candidate.experience == "Fresher")
                                {
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.candidate.experience)
                                        @Html.TextBoxFor(m => m.candidate.experience, new { @placeholder = "Experience", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.experience)
                                    </div>
                                    <!-- /.form-group -->
                                }
                                else
                                {
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.candidate.experience)
                                        @Html.TextBoxFor(m => m.candidate.experience, new { @placeholder = "Experience", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group mb-2">
                                        @Html.LabelFor(m => m.candidate.total_experience)
                                        @Html.TextBoxFor(m => m.candidate.total_experience, new { @placeholder = "Total Experience", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.total_experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.relevent_experience)
                                        @Html.TextBoxFor(m => m.candidate.relevent_experience, new { @placeholder = "Relevent Experience", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.relevent_experience)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.current_ctc)
                                        @Html.TextBoxFor(m => m.candidate.current_ctc, new { @placeholder = "Current CTC", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.current_ctc)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.expected_ctc)
                                        @Html.TextBoxFor(m => m.candidate.expected_ctc, new { @placeholder = "Expected CTC", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.expected_ctc)
                                    </div>
                                    <!-- /.form-group -->
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.notice_period)
                                        @Html.TextBoxFor(m => m.candidate.notice_period, new { @placeholder = "Notice Period", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.notice_period)
                                    </div>
                                    <!-- /.form-group -->
                                }
                            </div>
                            <!-- /.col -->

                        </div>
                        <!--/.row-->
                    </div>
                </div>
                <!-- /.box-body -->
            </form>
        </div>
    </div>
    <!-- /.box-body -->
</section>

<script>

    $(document).ready(function () {
        //for reset validation of form
        $('#reviewmodel').on('hidden.bs.modal', function () {
            $('.field-validation-error').html("");
        });
    });

    function Details(id) {
        window.location.href = '@Url.Action("ScheduleDetails", "Interviewer")?id=' + id;
    }


    $(function () {
        $('button[data-toggle="ajax-modal"]').click(function (event) {
            var url = $(this).data('url');
            $.get(url).done(function (data) {
                $('#modal-placeholder').html(data);
                $('#modal-placeholder > .modal').modal('show');
            });
        });
    });
    //Function for setting Flag_Accepted value as true
    function openPopup() {
        $("#Flag_Accepted").val(true);
        $('#reviewmodel').modal('show');
    }


</script>