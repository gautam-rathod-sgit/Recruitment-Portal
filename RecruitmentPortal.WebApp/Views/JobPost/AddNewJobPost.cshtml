@model RecruitmentPortal.WebApp.ViewModels.JobPostViewModel
@using RecruitmentPortal.WebApp.Helpers
@{
    ViewBag.Title = "AddNewJobPost";
}


<section class="content">
    @using (Html.BeginForm("AddNewJobPost", "JobPost", FormMethod.Post, new { @autocomplete = "off", @role = "form" }))
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="box box-default boxPad">
                    <div class="box-header">
                        <h3 class="box-title"><i class="fa fa-info-circle"></i><b> Add Job :</b></h3>
                        <div class="box-tools pull-right">
                            <input type="submit" value="Save" class="btn btn-primary" name="submit" />
                            <input type="submit" value="Save &amp; Continue" name="submit" class="btn btn-primary" />
                            @if (ViewBag.toIndex == true)
                            {
                                <a href="@Url.Action("Index", "JobCategory")" class="btn btn-primary">Cancel</a>
                            }
                            else
                            {
                                <a href="@Url.Action("DetailsJobCategory", "JobCategory", new { id = @RSACSPSample.EncodeServerName((Model.JobCategoryId).ToString()) })" class="btn btn-primary">Cancel</a>
                            }

                        </div>
                    </div>
                </div>

                <div class="box">
                    <div class="box-body">

                        @Html.HiddenFor(m => m.ID)
                        @Html.HiddenFor(m => m.JobCategoryId)
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.job_title,new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.job_title, new { @placeholder = "Job Title", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.job_title)
                                </div>

                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.location, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.location, new { @placeholder = "Location", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.location)
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.job_role, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.job_role, new { @placeholder = "Job Role", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.job_role)
                                </div>

                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.vacancy, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.vacancy, "{0:#.#}", new { @placeholder = "Vacancy", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.vacancy)
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.job_type, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.job_type, new { @placeholder = "Job Type", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.job_type)
                                </div>

                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.eligibility_criteria, new {@class = "asterisk" })}
                                    @Html.TextBoxFor(m => m.eligibility_criteria, new { @placeholder = "Eligibility criteria", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.eligibility_criteria)
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.LabelFor(m => m.experience, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.experience, new { @placeholder = "Experience", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.experience)
                                </div>

                                <div class="form-group has-feedback">
                                    @Html.LabelFor(m => m.skills, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.skills, new { @placeholder = "Skills", @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.skills)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>