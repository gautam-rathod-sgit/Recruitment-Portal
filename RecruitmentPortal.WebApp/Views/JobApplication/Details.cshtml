@model RecruitmentPortal.WebApp.ViewModels.JobApplicationViewModel
@using RecruitmentPortal.WebApp.Helpers
@using RecruitmentPortal.Infrastructure.Data.Enum
@using RecruitmentPortal.WebApp.Resources

 @*Modal for Accepting Application*@ 
<div class="modal fade bg-gradient-orange center" id="acceptmodel" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Fill Details:</h4>
            </div>
            <div class="modal-body" id="_AcceptApplicationView">

            </div>
        </div>
 @*/.modal-content*@ 
</div>
 @*/.modal-dialog*@ 
</div>
 @*Modal end*@ 
 @*Modal for Adding Rejection Reason*@ 
<div class="modal fade bg-gradient-orange center" id="rejectmodel" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Fill Details:</h4>
            </div>
            <div class="modal-body" id="_RejectionReasonView">

            </div>
        </div>
 @*/.modal-content*@ 
</div>
 @*/.modal-dialog*@ 
</div>
 @*Modal end*@ 

<section class="content">
    <div class="row">
        <div class="col-sm-12">
            <!-- /.box -->
                <div class="box box-default boxPad">
                    <div class="box-header">

                        <h3 class="box-title">
                            <i class="fa fa-info-circle"></i>
                            Candidate Details :
                        </h3>

                        <div class="box-tools pull-right">

                            @if (Model.Schedules == null)
                            {
                            <a href='@Url.Action("Index","Schedules", new { id = Model.EncryptedCandidateId })' class="btn btn-primary btn-sm">
                                Start Scheduling
                            </a>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary btn-sm">
                                    Next Schedule
                                </button>
                            }

                            @if (Model.ID > 0 && @Model.candidate.resume != null)
                            {
                                <a href='@Url.Action("Download", "Candidate", new { filename = @Model.candidate.resume })' class="btn btn-primary  btn-sm">
                                    Download Resume
                                </a>
                            }
                            <a class="btn btn-primary btn-sm" onclick="loadAcceptPartialView('@Model.EncryptedJobId','@Model.EncryptedCandidateId')">
                                Accept
                            </a>

                            <a class="btn btn-primary btn-sm" onclick="loadPartialView('@Model.EncryptedCandidateId')">
                                Reject
                            </a>
                        </div>
                    </div>
                </div>

                <!-- /.box-header -->
                    <div class="box box-default container p-2">
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidateName, new { @class = "asterisk" })
                                        @Html.TextBoxFor(m => m.candidateName, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidateName)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.position, new { @class = "asterisk", @readonly = true })
                                        @Html.TextBoxFor(m => m.position, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.position)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.job_Role, new { @class = "asterisk", @readonly = true })
                                        @Html.TextBoxFor(m => m.job_Role, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.job_Role)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.apply_date, new { @class = "asterisk", @readonly = true })
                                        @Html.TextBoxFor(m => m.candidate.apply_date, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.apply_date)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @if (Model.candidate != null)
                                    {
                                        @if (Model.candidate.experience == "Fresher")
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.experience, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.experience, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.experience)
                                            </div>
                                        }

                                        else
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.experience, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.experience, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.experience)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.total_experience, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.total_experience, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.total_experience)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.relevent_experience, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.relevent_experience, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.relevent_experience)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.current_ctc, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.current_ctc, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.current_ctc)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.expected_ctc, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.expected_ctc, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.expected_ctc)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.candidate.notice_period, new { @class = "asterisk", @readonly = true })
                                                @Html.TextBoxFor(m => m.candidate.notice_period, new { @class = "form-control", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.candidate.notice_period)
                                            </div>
                                        }
                                    }
                                </div>
                                <!-- /.col -->
                            </div>
                            <!--/.row-->
                        </div>
                    </div>
                    <!-- /.box-body -->
            @*}*@
        </div>
    </div>
    <!-- /.box-body -->
</section>

<section class="content">
    <div class="row">
        <div class="col-sm-12">
            <div class="box">
                <div class="box-body">
                        <table id="datatable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Interview Round</th>
                                    <th>Interviewer</th>
                                    <th>Rating</th>
                                    <th>Remarks</th>
                                    <th>Date-Time</th>
                                    <th>Status</th>
                                    <th>Action</th>     
                                </tr>
                            </thead>
                        </table>
                </div>
            </div>
           
        </div>
    </div>
</section>




<script type="text/javascript">
    $(document).ready(function () {
        bindDatatable();
    });

    function bindDatatable() {

        $('#datatable').DataTable({
                lengthChange: true,
                searching: true,
                ordering: false,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                paging: true,
                pagingType: "simple_numbers",
                pageLength: 10,
                fixedColumns: true,
                responsive: true,
                "bDestroy": true,
                "ajax": {
                    "url": "@Url.Action("GetActiveAppDetailsList", "JobApplication")",
                    "type": "GET",
                    "data": { "id": "@Model.EncryptedJobId" },
                    "datatype": "json"
                },
                "columns": [
                    { "data": "roundName", "name": "roundName" },
                    {
                        "data": "interviewerNames",
                        "mRender": function (data, type, row) {
                            var action = '';
                            $.each(row.interviewerNames, function (i) {
                                action += '' + row.interviewerNames[i].name + '<br>';
                            });
                            return action;
                        }
                    },
                    { "data": "rating", "name": "rating" },
                    { "data": "remark", "name": "remark" },
                    { "data": "statusName", "name": "statusName" },
                    { "data": "datetime", "name": "datetime" },
                    {
                        "sClass": "text-center",
                        "mRender": function (data, type, row) {
                            var edit = '<a href="javascript:void(0);" title="Edit" onclick="openRecord(\'' + row.encryptedId + '\')" class = "btn btn-primary btn-sm"><i class="fa fa-edit"></i></a>';
                            return edit;
                        }
                    }
                ],
                "order": [[0, "asc"]]
            });

    }



    $(function () {
        $('button[data-toggle="ajax-modal"]').click(function (event) {
            var url = $(this).data('url');
            $.get(url).done(function (data) {
                $('#modal-placeholder').html(data);
                $('#modal-placeholder > .modal').modal('show');
            });
        });
    });
    $(function () {
        //Display Only Date till today //
        var dtToday = new Date();
        var month = dtToday.getMonth() + 1;     // getMonth() is zero-based
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();
        if (month < 10)
            month = '0' + month.toString();
        if (day < 10)
            day = '0' + day.toString();
        debugger;
        var maxDate = year + '-' + month + '-' + day;
        $('#demo').attr('min', maxDate);
    });

    ////Function for setting Flag_Accepted value as true
    //function openPopup() {
    //    debugger;
    //    $("#Flag_Accepted").val(true);
    //    $('#add-contact').modal('show');
    //}

    ////Function for setting Flag_Rejected value as true
    //function openPopupReject() {
    //    debugger;
    //    $("#Flag_Rejected").val(true);
    //    $('#delete-contact').modal('show');
    //}

     function openRecord(id) {
        window.location.href = '@Url.Action("UpdateScheduleOfJobApplication", "JobApplication")?id=' + id;
    }


     function loadPartialView(id) {
        var url = '@Url.Action("RenderRejectionView", "Candidate" )?id=' + id;
        $('#_RejectionReasonView').load(url, function () {
            $('#rejectmodel').modal({ show: true });
        });
    }

    function loadAcceptPartialView(id, candidateId) {
        debugger;
        var url = '@Url.Action("RenderAcceptView", "JobApplication")?id=' + id + '&candidateId=' + candidateId;
        $('#_AcceptApplicationView').load(url, function () {
            $('#acceptmodel').modal({ show: true });
            $("#flag_Accepted").val(true);
        });
    }

</script>





@*<table class="table table-sm table-bordered  table-striped" style="table-layout: fixed; width: 100%">
    <tr><th>Round No.</th><th>Interviewer</th><th>Rating</th><th>Remarks</th><th>Status</th><th>Date-Time</th><th>Action</th></tr>
    @foreach (var user in Model.Schedules)
    {
        var i = 0;
        <tr>
            <td>@Enum.GetName(typeof(RoundType), user.round)</td>
            <td>
                @foreach (var item in user.InterviewerNames)
                {
                    <p>@(i += 1).@item.Name</p>
                }
            </td>
            <td>@user.rating</td>
            <td style="word-wrap: break-word">@user.remark</td>
            <td><b>@user.statusName</b></td>
            <td>@user.datetime</td>
            <td>
                @Html.ActionLink("Edit", "UpdateScheduleOfJobApplication", "JobApplication", new { id = RSACSPSample.EncodeServerName((Model.ID).ToString()), scheduleId = RSACSPSample.EncodeServerName((user.ID).ToString()) }, new { @class = "btn btn-primary mr-2" })
                @Html.ActionLink("Delete", "UpdateScheduleOfJobApplication", "JobApplication", new { id = RSACSPSample.EncodeServerName((Model.ID).ToString()), scheduleId = RSACSPSample.EncodeServerName((user.ID).ToString()), delete = true }, new { @class = "btn btn-danger mr-2" })
            </td>


        </tr>
    }
</table>*@