@model RecruitmentPortal.WebApp.ViewModels.JobApplicationViewModel
@using RecruitmentPortal.WebApp.Helpers
@using RecruitmentPortal.WebApp.Resources
@using RecruitmentPortal.Infrastructure.Data.Enum
@{
    ViewData["Title"] = "SelectedJobApplicationsDetails";
    string isFresher = "Fresher";
    string status_Pending = Enum.GetName(typeof(JobApplicationStatus), 1);
    string status_Complete = Enum.GetName(typeof(JobApplicationStatus), 2);
    string status_Rejected = Enum.GetName(typeof(JobApplicationStatus), 3);

}

<!-- Modal for Edit Joining date -->
<div class="modal fade" id="edit-date" tabindex="-1" role="dialog" aria-labelledby="addJoiningLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="addJoiningLabel">Edit Joining Date:</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="UpdateJobApplicationPost">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" value="@Model.ID" id="ID" name="ID" />
                    <input type="hidden" value="@Model.candidateId" id="candidateId" name="candidateId" />
                    <input type="hidden" value="@Model.accept_date" id="accept_date" name="accept_date" />
                    <input type="hidden" value="@Model.start_date" id="start_date" name="start_date" />
                    <input type="hidden" value="@Model.status" id="status" name="status" />
                    <input type="hidden" value="@Model.notified" id="notified" name="notified" />
                    <input type="hidden" value="@Model.commitment_mode" id="commitment_mode" name="commitment_mode" />
                    <input type="hidden" value="@Model.offered_ctc" id="offered_ctc" name="offered_ctc" />
                    <input type="hidden" value="@Model.remarks" id="remarks" name="remarks" />
                    <input type="hidden" value="true" id="flag_Edit" name="flag_Edit" />
                    <input type="hidden" value="@ViewBag.toAdminIndex" id="editFromMenu" name="editFromMenu" />


                    <div class="form-group mb-2">
                        @Html.LabelFor(m => m.joining_date)
                        @Html.TextBoxFor(m => m.joining_date, new { @type = "datetime", @placeholder = "Joining Date", @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(m => m.joining_date)
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" >Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal end -->
<!-- Modal for Rejecting -->
<div class="modal fade in bg-gradient-orange" id="delete-contact" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="addContactLabel">Fill Details:</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="UpdateJobApplicationPost">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" value="@Model.ID" id="ID" name="ID" />
                    <input type="hidden" value="@Model.candidateId" id="candidateId" name="candidateId" />
                    <input type="hidden" value="@Model.accept_date" id="accept_date" name="accept_date" />
                    <input type="hidden" value="@Model.start_date" id="start_date" name="start_date" />
                    <input type="hidden" value="@Model.status" id="status" name="status" />
                    <input type="hidden" value="@Model.notified" id="notified" name="notified" />
                    <input type="hidden" value="@Model.commitment_mode" id="commitment_mode" name="commitment_mode" />
                    <input type="hidden" value="@Model.offered_ctc" id="offered_ctc" name="offered_ctc" />
                    <input type="hidden" value="@Model.remarks" id="remarks" name="remarks" />
                    <input type="hidden" value="true" id="flag_Edit" name="flag_Edit" />
                    <input type="hidden" value="@ViewBag.toAdminIndex" id="editFromMenu" name="editFromMenu" />
                    <input type="hidden" value="@Model.flag_Rejected" id="Flag_Rejected" name="Flag_Rejected" />
                    <div class="form-group">
                        <label asp-for="rejection_reason" class="control-label asterisk">Rejection Reason:</label>
                        <input asp-for="rejection_reason" required class="form-control" type="text" id="demo" />
                        <span asp-validation-for="rejection_reason" class="text-danger"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" id="submit-btn">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal end -->


<section class="content">
    <div class="row">
        <div class="col-sm-12">
            <!-- /.box -->
            <div class="box box-default boxPad">
                <div class="box-header">


                    @if (Model.status == status_Rejected)
                    {
                        <h3 class="box-title">
                            <i class="fa fa-info-circle"></i>
                            Rejected Candidate Details

                        </h3>
                    }
                    else
                    {
                        <h3 class="box-title">
                            <i class="fa fa-info-circle"></i>

                            Selected Candidate Details
                            @if (Model.notified)
                            {
                        <span class="pt-0">Already Notified! </span>
                            }
                        </h3>

                    }

                    <div class="box-tools pull-right">

                        @if (Model.status == status_Complete)
                        {
                            @if (!Model.notified)
                            {


                                <!-- Button trigger modal -->
                                <button type="button" class="btn btn-primary mr-2" data-toggle="modal" data-target="#edit-date">
                                    Edit
                                </button>

                                <!-- Button trigger modal For Rejecting Application-->
                                <button type="button" class="btn btn-primary mr-2" data-toggle="#delete-contact" data-target="#delete-contact" onclick="openPopupReject()">
                                    Reject
                                </button>

                                <a asp-action="ConfirmJobApplication" asp-controller="JobApplication" asp-route-id="@RSACSPSample.EncodeServerName((Model.ID).ToString())" class="btn btn-success mr-3">
                                    Confirm
                                </a>

                            }
                            else
                            {

                                @*<h4 class="text-red center pull-left" >Already Notified! </h4>*@
                                @*<button class="btn btn-secondary btn-sm mr-1">
                                        Edit
                                    </button>
                                    <button class="btn btn-secondary btn-sm mr-1">
                                        Reject
                                    </button>
                                    <button class="btn btn-primary btn-sm mr-1">
                                        Notified
                                    </button>*@

                            }
                            @if (ViewBag.toAdminIndex != null || ViewBag.toAdminIndex == true)
                            {

                                <a asp-action="AdminIndex" asp-controller="Account" class="btn btn-primary btn-sm ">Cancel</a>

                            }
                            else
                            {

                                <a asp-action="AllApplications" asp-controller="Candidate" asp-route-Application_mode="Accepted" class="btn btn-primary btn-sm ">Cancel</a>

                            }
                        }
                        @*Rejected application data*@
                        @if (Model.status == status_Rejected)
                        {
                            <a asp-action="ReOpenJobApplication" asp-controller="JobApplication" asp-route-id="@RSACSPSample.EncodeServerName((Model.ID).ToString())" class="btn btn-primary btn-sm mr-3">
                                Re-open
                            </a>
                            <a asp-action="Download" asp-controller="Candidate" class="btn btn-primary btn-sm mr-3"
                               asp-route-filename="@Model.candidate.resume">
                                Download Resume
                            </a>
                            <a asp-action="AllApplications" asp-controller="Candidate" asp-route-Application_mode=all_mode class="btn btn-primary btn-sm">Cancel</a>
                        }


                    </div>
                </div>
            </div>

            <!-- /.box-header -->
            <form>
                <div class="box box-default container p-2">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.name)
                                    @Html.TextBoxFor(m => m.candidate.name, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.name)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.email)
                                    @Html.TextBoxFor(m => m.candidate.email, new { @placeholder = "Job Title", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.email)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.phone)
                                    @Html.TextBoxFor(m => m.candidate.phone, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.phone)
                                </div>
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.dob)
                                    @Html.TextBoxFor(m => m.candidate.dob, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.dob)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.Gender)
                                    @Html.TextBoxFor(m => m.candidate.Gender, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.Gender)
                                </div>
                                <!-- /.form-group -->
                                <!-- /.form-group -->
                                <div class="form-group mb-3">
                                    @Html.LabelFor(m => m.candidate.ssc_perc)
                                    @Html.TextBoxFor(m => m.candidate.ssc_perc, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.ssc_perc)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.hsc_perc)
                                    @Html.TextBoxFor(m => m.candidate.hsc_perc, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.hsc_perc)
                                </div>
                                <!-- /.form-group -->
                                <div class="form-group mb-2">
                                    @Html.LabelFor(m => m.candidate.degree)
                                    @Html.TextBoxFor(m => m.candidate.degree, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.candidate.degree)
                                </div>
                                <!-- /.form-group -->


                                @if (Model.status == status_Complete)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.commitment_mode)
                                        @Html.TextBoxFor(m => m.commitment_mode, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.commitment_mode)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.offered_ctc)
                                        @Html.TextBoxFor(m => m.offered_ctc, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.offered_ctc)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.remarks)
                                        @Html.TextBoxFor(m => m.remarks, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.remarks)
                                    </div>
                                }
                                @if (Model.status == status_Rejected)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.apply_date)
                                        @Html.TextBoxFor(m => m.candidate.apply_date, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.apply_date)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.position)
                                        @Html.TextBoxFor(m => m.position, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.position)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.job_Role)
                                        @Html.TextBoxFor(m => m.job_Role, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.job_Role)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.rejection_date)
                                        @Html.TextBoxFor(m => m.rejection_date, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.rejection_date)
                                    </div>
                                    @if (Model.listOfRounds.Count() > 0)
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.allRounds)
                                            @Html.TextBoxFor(m => m.allRounds, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.allRounds)
                                            @Html.TextBoxFor(m => m.allRounds, new { @placeholder = "No Rounds Available", @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                    @if (Model.rejection_reason != null)
                                    {
                                        @Html.LabelFor(m => m.rejection_reason)
                                        @Html.TextBoxFor(m => m.rejection_reason, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.rejection_reason)
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.allRounds)
                                            @Html.TextBoxFor(m => m.allRounds, new { @value = "No Reason Available", @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                }


                            </div>
                            <div class="col-md-6 container p-2">
                                @if (Model.candidate.experience == isFresher)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.experience)
                                        @Html.TextBoxFor(m => m.candidate.experience, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.experience)
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.experience)
                                        @Html.TextBoxFor(m => m.candidate.experience, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.experience)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.total_experience)
                                        @Html.TextBoxFor(m => m.candidate.total_experience, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.total_experience)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.relevent_experience)
                                        @Html.TextBoxFor(m => m.candidate.relevent_experience, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.relevent_experience)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.current_ctc)
                                        @Html.TextBoxFor(m => m.candidate.current_ctc, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.current_ctc)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.expected_ctc)
                                        @Html.TextBoxFor(m => m.candidate.expected_ctc, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.expected_ctc)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.notice_period)
                                        @Html.TextBoxFor(m => m.candidate.notice_period, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.notice_period)
                                    </div>
                                }
                                @if (Model.status == status_Complete)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.apply_date)
                                        @Html.TextBoxFor(m => m.candidate.apply_date, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.apply_date)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.candidate.applying_through)
                                        @Html.TextBoxFor(m => m.candidate.applying_through, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.candidate.applying_through)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.joining_date)
                                        @Html.TextBoxFor(m => m.joining_date, new { @placeholder = "Not Available", @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.joining_date)
                                    </div>
                                    @if (Model.listOfRounds.Count() > 0)
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.allRounds)
                                            @Html.TextBoxFor(m => m.allRounds, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.allRounds)
                                            @Html.TextBoxFor(m => m.allRounds, new { @placeholder = "No Rounds Available", @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    }
                                }

                            </div>
                            <!-- /.col -->

                        </div>
                        <!--/.row-->
                    </div>
                </div>
                <!-- /.box-body -->
            </form>
        </div>
    </div>
</section>
<script>
    $(function () {
        $('button[data-toggle="ajax-modal"]').click(function (event) {
            var url = $(this).data('url');
            $.get(url).done(function (data) {
                $('#modal-placeholder').html(data);
                $('#modal-placeholder > .modal').modal('show');
            });
        });
    });

    //Function for setting Flag_Rejected value as true
    function openPopupReject() {
        $("#Flag_Rejected").val(true);
        $('#delete-contact').modal('show');
    }
     function error() {
        notification("Error", '@Messages.CannotReject', "error");
    }

</script>