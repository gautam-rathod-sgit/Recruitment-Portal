@model RecruitmentPortal.WebApp.ViewModels.SchedulesViewModel

@using RecruitmentPortal.WebApp.Helpers

@using RecruitmentPortal.WebApp.Resources



<section class="content">
    @using (Html.BeginForm("UpdateScheduleOfJobApplicationPost", "JobApplication", FormMethod.Post, new { @autocomplete = "off", @role = "form" }))
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="box box-default boxPad">
                    <div class="box-header">
                        <h3 class="box-title">
                            <i class="fa fa-info-circle"></i>
                            Schedule Interview
                        </h3>

                        <div class="box-tools pull-right">
                            <input type="submit" value="Save" class="btn btn-primary" name="submit" />
                            @if (ViewBag.goback == true)
                            {


                                <a href='@Url.Action("ScheduleDetails", "Interviewer", new { scheduleId = Model.jobAppId})' class="btn btn-primary">Cancel</a>

                            }
                            else
                            {

                                <a href='@Url.Action("Details", "JobApplication", new { id = RSACSPSample.EncodeServerName(Model.jobAppId.ToString())})' class="btn btn-primary">Cancel</a>

                            }
                        </div>
                    </div>
                </div>

                <div class="box">
                    <div class="box-body">

                        <div class="row">
                            <div class="col-md-6">

                                <input type="hidden" id="ID" name="ID" value="@Model.ID" />

                                @Html.HiddenFor(m => m.candidateId)

                                <div class="form-group">
                                    @Html.LabelFor(m => m.candidate_name, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.candidate_name, new { @placeholder = "Name", @class = "form-control", @readonly = "readonly" })                                    @Html.ValidationMessageFor(m => m.candidate_name)
                                    @Html.ValidationMessageFor(m => m.candidate_name)

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.position, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.position, new { @placeholder = "Position", @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.position)


                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.datetime, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.datetime, new { @type = "datetime", @placeholder = "Date & Time", @class = "form-control datetimepicker1" })
                                    @Html.ValidationMessageFor(model => model.datetime, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.roundValue, new { @class = "asterisk" })
                                    @Html.DropDownListFor(m => m.roundValue, new SelectList(ViewBag.RoundTypeList, "Value", "Text"), Messages.PleaseSelect, new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.roundValue)

                                </div>
                            </div>

                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Multiinterviewer, new { @class = "asterisk" })
                                    @Html.ListBoxFor(m => m.Multiinterviewer, new MultiSelectList(ViewBag.users), new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.Multiinterviewer)

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.statusvalue, new { @class = "asterisk" })
                                    @Html.DropDownListFor(m => m.statusvalue, new SelectList(ViewBag.StatusTypeList, "Value", "Text"), Messages.PleaseSelect, new { @class = "form-control select2" })
                                    @Html.ValidationMessageFor(model => model.statusvalue)

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.mode_of_interview, new { @class = "asterisk" })
                                    <div class="col-10">
                                        @Html.Label("Online")
                                        @Html.RadioButtonFor(m => m.mode_of_interview, "Online", new { @id = "online" })
                                        @Html.Label("Face to Face")
                                        @Html.RadioButtonFor(m => m.mode_of_interview, "Face-To-Face", new { @id = "face" })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.mode_of_interview)

                                </div>
                                <div class="form-group hiddenclass">
                                    @Html.LabelFor(m => m.location, new { @class = "asterisk" })
                                    @Html.TextBoxFor(m => m.location, new { @placeholder = "Position", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.location)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
</section>
<script>

    
    $(function () {

        $('.datetimepicker1').datetimepicker({
            format: 'DD/MM/YYYY hh:mm A',
            minDate: new Date()
        });

        $(".select2").select2();

        $(".hiddenclass").hide();

        $("#face").click(function () {
            $(".hiddenclass").show();
        });

        $("#online").click(function () {
            $(".hiddenclass").hide();
        });
    });
</script>
