<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyingThroughRequired" xml:space="preserve">
    <value>ApplyingThrough is Required</value>
  </data>
  <data name="CandidateNameRequired" xml:space="preserve">
    <value>Candidate Name is Required</value>
  </data>
  <data name="CurrentCTCRequired" xml:space="preserve">
    <value>Current CTC is Required</value>
  </data>
  <data name="DateofBirthRequired" xml:space="preserve">
    <value>Date of Birth is Required</value>
  </data>
  <data name="DateTimeRequired" xml:space="preserve">
    <value>Date &amp; Time is Required</value>
  </data>
  <data name="DeactivationFailed" xml:space="preserve">
    <value>Can't Deactivate as Data is being used by Application.</value>
  </data>
  <data name="DegreeRequired" xml:space="preserve">
    <value>Highest Qualification is Required</value>
  </data>
  <data name="EligibilityCriteriaRequired" xml:space="preserve">
    <value>Eligibility Criteria is Required</value>
  </data>
  <data name="CandidateNameRequired" xml:space="preserve">
    <value>Candidate Name is Required</value>
  </data>
  <data name="DateTimeRequired" xml:space="preserve">
    <value>Date &amp; Time is Required</value>
  </data>
  <data name="Emailrequired" xml:space="preserve">
    <value>Email is Required</value>
  </data>
  <data name="EnableEntity" xml:space="preserve">
    <value>Activate Item for Editing</value>
  </data>
  <data name="EndDateGreaterThanStartDate" xml:space="preserve">
    <value>End date must be greater than or equal to start date</value>
  </data>
  <data name="ExpectedCTCRequired" xml:space="preserve">
    <value>Expected CTC is Required</value>
  </data>
  <data name="ExperienceRequired" xml:space="preserve">
    <value>Experience is Required</value>
  </data>
  <data name="GenderRequired" xml:space="preserve">
    <value>Gender is Required</value>
  </data>
  <data name="HSCPercentageRequired" xml:space="preserve">
    <value>HSC Percentage is Required</value>
  </data>
  <data name="InterviewerRequired" xml:space="preserve">
    <value>Please choose the Interviewer</value>
  </data>
  <data name="InterviewModeRequired" xml:space="preserve">
    <value>Please Select the mode of Interview</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Please Provide valid Email Address</value>
  </data>
  <data name="JobRoleRequired" xml:space="preserve">
    <value>Job Role is Required</value>
  </data>
  <data name="JobTitleRequired" xml:space="preserve">
    <value>Job Title is Required</value>
  </data>
  <data name="JobTypeRequired" xml:space="preserve">
    <value>Job Type is Required</value>
  </data>
  <data name="LocationRequired" xml:space="preserve">
    <value>Location is Required</value>
  </data>
  <data name="ModeofInterviewRequired" xml:space="preserve">
    <value>Mode of Interview is Required</value>
  </data>
  <data name="NoticePeriodRequired" xml:space="preserve">
    <value>Notice Period is Required</value>
  </data>
  <data name="Passwordrequired" xml:space="preserve">
    <value>Password is Required</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Phone No. is Required</value>
  </data>
  <data name="PleaseSelect" xml:space="preserve">
    <value>--- Please Select ---</value>
  </data>
  <data name="RatingRequired" xml:space="preserve">
    <value>Rating is Required</value>
  </data>
  <data name="ReleventExperienceRequired" xml:space="preserve">
    <value>Relevent Experience is Required</value>
  </data>
  <data name="RemarkRequired" xml:space="preserve">
    <value>Remark is Required</value>
  </data>
  <data name="ResumeRequired" xml:space="preserve">
    <value>Resume is Required</value>
  </data>
  <data name="RoundRequired" xml:space="preserve">
    <value>Round is Required</value>
  </data>
  <data name="SkillsRequired" xml:space="preserve">
    <value>Skills is Required</value>
  </data>
  <data name="PositionRequired" xml:space="preserve">
    <value>Job Position is Required</value>
  </data>
  <data name="RoundTypeRequired" xml:space="preserve">
    <value>Type of Round is Required</value>
  </data>
  <data name="SomethingWrong" xml:space="preserve">
    <value>Something Went wrong. Please try again later.</value>
  </data>
  <data name="SSCPercentageRequired" xml:space="preserve">
    <value>SSC Percentage is Required</value>
  </data>
  <data name="StatusRequired" xml:space="preserve">
    <value>Status is Required</value>
  </data>
  <data name="TotalExperienceRequired" xml:space="preserve">
    <value>Total Experience is Required</value>
  </data>
  <data name="VacancyRequired" xml:space="preserve">
    <value>Vacancy is Required</value>
  </data>
  <data name="ValidVacancyRequired" xml:space="preserve">
    <value>Valid Vacancy is Required</value>
  </data>
  <data name="StatusValueRequired" xml:space="preserve">
    <value>Please Select InterviewStatus</value>
  </data>
</root>